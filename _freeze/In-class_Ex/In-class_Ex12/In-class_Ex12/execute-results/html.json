{
  "hash": "c0fb95bfdf027b4aadfcdaffff952489",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 12\"\nsubtitle: \"Geographically Weighted Predictive Modelling\"\nauthor: \"Foo Jia Yi Samantha\"\ndate-modified: 14/11/2024\ndate: 14/11/2024\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# 1. Load Required Packages\n\nLet's first install and load the packages needed for this exercise.\n\n-   **sf**: Manages and manipulates spatial data using simple feature (sf) objects.\n\n<!-- -->\n\n-   **spdep**: Provides spatial dependency tools, including spatial weights and clustering methods.\n\n-   **GWModel**: Facilitates geographically weighted modeling, such as GWR and GWGLM, for spatially varying relationships.\n\n-   **SpatialML**: Implements machine learning methods tailored for spatial data analysis.\n\n-   **tmap**: Creates thematic maps for spatial data visualization, supporting interactive mapping.\n\n-   **rsample**: Aids in data resampling for model validation, such as cross-validation and bootstrap.\n\n-   **yardstick**: Evaluates model performance metrics, particularly for regression and classification tasks.\n\n-   **tidyverse**: A suite of packages for data manipulation, visualization, and analysis in a tidy format.\n\n-   **knitr**: Produces dynamic reports, supporting R code chunks for seamless integration in documents.\n\n-   **kableExtra**: Enhances table formatting in R, allowing for customised and aesthetic tables.\n\n-   **spatialRF**: Specialises in spatial random forests, focusing on spatially dependent data predictions and modeling.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWModel, SpatialML, tmap, rsample, yardstick, tidyverse, knitr, kableExtra, spatialRF)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into 'C:/Users/Samantha/AppData/Local/R/win-library/4.4'\n(as 'lib' is unspecified)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'GWModel' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Perhaps you meant 'GWmodel' ?\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.4/PACKAGES'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in p_install(package, character.only = TRUE, ...):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'GWModel'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pacman::p_load(sf, spdep, GWModel, SpatialML, tmap, rsample, : Failed to install/load:\nGWModel\n```\n\n\n:::\n:::\n\n\n# 2. Preparing Data\n\n## 2.1 Data Import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n\n## 2.2 Data Sampling\n\nCalibrating predictive models can be computationally **intensive**, especially when random forest method is used. For quick prototyping, a **10%** sample will be selected at random from the data by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHDB_sample <- mdata %>%\n  sample_n(1500)\n```\n:::\n\n\n::: callout-note\nNote that we do not need to use all of the data in predictive modelling, in fact we can choose to sample data from the entire dataset.\n:::\n\n## 2.3 Checking of Overlapping Points\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points <- HDB_sample %>%\n  mutate(overlap = lengths(st_equals(., .)) > 1)\nsummary(overlapping_points$overlap)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Mode   FALSE    TRUE \nlogical    1047     453 \n```\n\n\n:::\n:::\n\n\n::: callout-note\nWhen using GWmodel to calibrate explanatory or predictive models, it is very important to ensure that there are no overlapping point features\n:::\n\n## 2.4 Spatial Jitter\n\nIn the code code chunk below, [`st_jitter()`](https://r-spatial.github.io/sf/reference/st_jitter.html) of **sf** package is used to move the point features by 5m to avoid overlapping point features.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHDB_sample <- HDB_sample %>%\n  st_jitter(amount = 5)\n```\n:::\n\n\n::: callout-note\nOne metre is considered safe enough - no need to use five metres.\n:::\n\n# 3. Data Sampling\n\nThe entire data are split into training and test data sets with 65% and 35% respectively by using *initial_split()* of **rsample** package. rsample is one of the package of tigymodels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(HDB_sample, \n                              prop = 6.67/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n\nIt is always a good practice to save the training and test data sets for subsequent used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")\n```\n:::\n\n\n# **4. Multicollinearity check**\n\nIn order to avoid multicollineariy. In the code chunk below, [`ggcorrmat()`](https://indrajeetpatil.github.io/ggstatsplot/articles/web_only/ggcorrmat.html) of **ggstatsplot** is used to plot a correlation matrix to check if there are pairs of highly correlated independent variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])\n```\n\n::: {.cell-output-display}\n![](In-class_Ex12_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n# 5. **Building a non-spatial multiple linear regression**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.862       RMSE                    60813.316 \nR-Squared                   0.742       MSE                3754578098.252 \nAdj. R-Squared              0.739       Coef. Var                  14.255 \nPred R-Squared              0.734       AIC                     24901.005 \nMAE                     45987.256       SBC                     24979.529 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                      \n-------------------------------------------------------------------------------\n                    Sum of                                                     \n                   Squares         DF         Mean Square       F         Sig. \n-------------------------------------------------------------------------------\nRegression    1.065708e+13         14    761220078101.236    202.745    0.0000 \nResidual      3.698259e+12        985      3754578098.252                      \nTotal         1.435534e+13        999                                          \n-------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                 \n------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta       t        Sig          lower         upper \n------------------------------------------------------------------------------------------------------------------\n             (Intercept)    115703.696     34303.409                   3.373    0.001     48387.533    183019.860 \n          floor_area_sqm      2778.618       292.262        0.165      9.507    0.000      2205.089      3352.146 \n            storey_order     12698.165      1070.950        0.211     11.857    0.000     10596.559     14799.771 \n    remaining_lease_mths       350.252        14.596        0.450     23.997    0.000       321.610       378.894 \n                PROX_CBD    -16225.588       630.092       -0.572    -25.751    0.000    -17462.065    -14989.110 \n        PROX_ELDERLYCARE    -11330.930      3220.845       -0.061     -3.518    0.000    -17651.436     -5010.423 \n             PROX_HAWKER    -19964.070      4021.046       -0.087     -4.965    0.000    -27854.872    -12073.268 \n                PROX_MRT    -39652.516      5412.288       -0.130     -7.326    0.000    -50273.456    -29031.577 \n               PROX_PARK    -15878.322      4609.199       -0.061     -3.445    0.001    -24923.300     -6833.344 \n               PROX_MALL    -15910.922      6438.111       -0.048     -2.471    0.014    -28544.911     -3276.933 \n        PROX_SUPERMARKET    -18928.514     13304.965       -0.025     -1.423    0.155    -45037.848      7180.821 \nWITHIN_350M_KINDERGARTEN      9309.735      2024.293        0.079      4.599    0.000      5337.313     13282.157 \n   WITHIN_350M_CHILDCARE     -1619.514      1180.948       -0.026     -1.371    0.171     -3936.977       697.948 \n         WITHIN_350M_BUS      -447.695       738.715       -0.011     -0.606    0.545     -1897.331      1001.940 \n       WITHIN_1KM_PRISCH    -10698.012      1543.511       -0.138     -6.931    0.000    -13726.960     -7669.065 \n------------------------------------------------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n\n# 6. **Multicollinearity check with VIF**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvif <- performance::check_collinearity(price_mlr)\nkable(vif, \n      caption = \"Variance Inflation Factor (VIF) Results\") %>%\n  kable_styling(font_size = 18) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 18px; margin-left: auto; margin-right: auto;\">\n<caption style=\"font-size: initial !important;\">Variance Inflation Factor (VIF) Results</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:right;\"> VIF </th>\n   <th style=\"text-align:right;\"> VIF_CI_low </th>\n   <th style=\"text-align:right;\"> VIF_CI_high </th>\n   <th style=\"text-align:right;\"> SE_factor </th>\n   <th style=\"text-align:right;\"> Tolerance </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_low </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_high </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> floor_area_sqm </td>\n   <td style=\"text-align:right;\"> 1.146686 </td>\n   <td style=\"text-align:right;\"> 1.085743 </td>\n   <td style=\"text-align:right;\"> 1.250945 </td>\n   <td style=\"text-align:right;\"> 1.070834 </td>\n   <td style=\"text-align:right;\"> 0.8720785 </td>\n   <td style=\"text-align:right;\"> 0.7993954 </td>\n   <td style=\"text-align:right;\"> 0.9210287 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> storey_order </td>\n   <td style=\"text-align:right;\"> 1.206020 </td>\n   <td style=\"text-align:right;\"> 1.135720 </td>\n   <td style=\"text-align:right;\"> 1.312734 </td>\n   <td style=\"text-align:right;\"> 1.098189 </td>\n   <td style=\"text-align:right;\"> 0.8291736 </td>\n   <td style=\"text-align:right;\"> 0.7617690 </td>\n   <td style=\"text-align:right;\"> 0.8804986 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> remaining_lease_mths </td>\n   <td style=\"text-align:right;\"> 1.343645 </td>\n   <td style=\"text-align:right;\"> 1.254833 </td>\n   <td style=\"text-align:right;\"> 1.463410 </td>\n   <td style=\"text-align:right;\"> 1.159157 </td>\n   <td style=\"text-align:right;\"> 0.7442440 </td>\n   <td style=\"text-align:right;\"> 0.6833358 </td>\n   <td style=\"text-align:right;\"> 0.7969186 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_CBD </td>\n   <td style=\"text-align:right;\"> 1.887898 </td>\n   <td style=\"text-align:right;\"> 1.733977 </td>\n   <td style=\"text-align:right;\"> 2.074096 </td>\n   <td style=\"text-align:right;\"> 1.374008 </td>\n   <td style=\"text-align:right;\"> 0.5296898 </td>\n   <td style=\"text-align:right;\"> 0.4821378 </td>\n   <td style=\"text-align:right;\"> 0.5767088 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_ELDERLYCARE </td>\n   <td style=\"text-align:right;\"> 1.140418 </td>\n   <td style=\"text-align:right;\"> 1.080572 </td>\n   <td style=\"text-align:right;\"> 1.244716 </td>\n   <td style=\"text-align:right;\"> 1.067904 </td>\n   <td style=\"text-align:right;\"> 0.8768712 </td>\n   <td style=\"text-align:right;\"> 0.8033960 </td>\n   <td style=\"text-align:right;\"> 0.9254357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_HAWKER </td>\n   <td style=\"text-align:right;\"> 1.183865 </td>\n   <td style=\"text-align:right;\"> 1.116887 </td>\n   <td style=\"text-align:right;\"> 1.289223 </td>\n   <td style=\"text-align:right;\"> 1.088056 </td>\n   <td style=\"text-align:right;\"> 0.8446907 </td>\n   <td style=\"text-align:right;\"> 0.7756609 </td>\n   <td style=\"text-align:right;\"> 0.8953457 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MRT </td>\n   <td style=\"text-align:right;\"> 1.211390 </td>\n   <td style=\"text-align:right;\"> 1.140307 </td>\n   <td style=\"text-align:right;\"> 1.318485 </td>\n   <td style=\"text-align:right;\"> 1.100632 </td>\n   <td style=\"text-align:right;\"> 0.8254980 </td>\n   <td style=\"text-align:right;\"> 0.7584464 </td>\n   <td style=\"text-align:right;\"> 0.8769566 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_PARK </td>\n   <td style=\"text-align:right;\"> 1.186122 </td>\n   <td style=\"text-align:right;\"> 1.118797 </td>\n   <td style=\"text-align:right;\"> 1.291599 </td>\n   <td style=\"text-align:right;\"> 1.089092 </td>\n   <td style=\"text-align:right;\"> 0.8430839 </td>\n   <td style=\"text-align:right;\"> 0.7742340 </td>\n   <td style=\"text-align:right;\"> 0.8938169 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MALL </td>\n   <td style=\"text-align:right;\"> 1.435504 </td>\n   <td style=\"text-align:right;\"> 1.335252 </td>\n   <td style=\"text-align:right;\"> 1.565736 </td>\n   <td style=\"text-align:right;\"> 1.198125 </td>\n   <td style=\"text-align:right;\"> 0.6966193 </td>\n   <td style=\"text-align:right;\"> 0.6386771 </td>\n   <td style=\"text-align:right;\"> 0.7489224 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_SUPERMARKET </td>\n   <td style=\"text-align:right;\"> 1.226727 </td>\n   <td style=\"text-align:right;\"> 1.153448 </td>\n   <td style=\"text-align:right;\"> 1.335000 </td>\n   <td style=\"text-align:right;\"> 1.107577 </td>\n   <td style=\"text-align:right;\"> 0.8151773 </td>\n   <td style=\"text-align:right;\"> 0.7490638 </td>\n   <td style=\"text-align:right;\"> 0.8669656 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_KINDERGARTEN </td>\n   <td style=\"text-align:right;\"> 1.123989 </td>\n   <td style=\"text-align:right;\"> 1.067172 </td>\n   <td style=\"text-align:right;\"> 1.228865 </td>\n   <td style=\"text-align:right;\"> 1.060183 </td>\n   <td style=\"text-align:right;\"> 0.8896886 </td>\n   <td style=\"text-align:right;\"> 0.8137594 </td>\n   <td style=\"text-align:right;\"> 0.9370564 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_CHILDCARE </td>\n   <td style=\"text-align:right;\"> 1.387119 </td>\n   <td style=\"text-align:right;\"> 1.292841 </td>\n   <td style=\"text-align:right;\"> 1.511748 </td>\n   <td style=\"text-align:right;\"> 1.177760 </td>\n   <td style=\"text-align:right;\"> 0.7209189 </td>\n   <td style=\"text-align:right;\"> 0.6614860 </td>\n   <td style=\"text-align:right;\"> 0.7734902 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_BUS </td>\n   <td style=\"text-align:right;\"> 1.193498 </td>\n   <td style=\"text-align:right;\"> 1.125056 </td>\n   <td style=\"text-align:right;\"> 1.299398 </td>\n   <td style=\"text-align:right;\"> 1.092473 </td>\n   <td style=\"text-align:right;\"> 0.8378731 </td>\n   <td style=\"text-align:right;\"> 0.7695869 </td>\n   <td style=\"text-align:right;\"> 0.8888447 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_1KM_PRISCH </td>\n   <td style=\"text-align:right;\"> 1.508943 </td>\n   <td style=\"text-align:right;\"> 1.399770 </td>\n   <td style=\"text-align:right;\"> 1.647930 </td>\n   <td style=\"text-align:right;\"> 1.228390 </td>\n   <td style=\"text-align:right;\"> 0.6627154 </td>\n   <td style=\"text-align:right;\"> 0.6068219 </td>\n   <td style=\"text-align:right;\"> 0.7144029 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n# 7. **Predictive Modelling with gwr**\n\n::: panel-tabset\n## Computing bw\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(GWmodel)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'GWmodel' was built under R version 4.4.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: robustbase\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: sp\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: Rcpp\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'Rcpp'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:rsample':\n\n    populate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWelcome to GWmodel version 2.4-2.\n```\n\n\n:::\n\n```{.r .cell-code}\ngwr_bw_train_ad <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 625 CV score: 3.459032e+12 \nAdaptive bandwidth: 394 CV score: 3.231786e+12 \nAdaptive bandwidth: 250 CV score: 2.914736e+12 \nAdaptive bandwidth: 162 CV score: 2.610897e+12 \nAdaptive bandwidth: 107 CV score: 2.240188e+12 \nAdaptive bandwidth: 73 CV score: 1.971641e+12 \nAdaptive bandwidth: 52 CV score: 1.797271e+12 \nAdaptive bandwidth: 39 CV score: 1.659472e+12 \nAdaptive bandwidth: 31 CV score: 1.573963e+12 \nAdaptive bandwidth: 26 CV score: 1.550147e+12 \nAdaptive bandwidth: 23 CV score: 1.542544e+12 \nAdaptive bandwidth: 21 CV score: 1.518885e+12 \nAdaptive bandwidth: 19 CV score: 1.515965e+12 \nAdaptive bandwidth: 19 CV score: 1.515965e+12 \n```\n\n\n:::\n\n```{.r .cell-code}\ngwr_bw_train_ad\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 19\n```\n\n\n:::\n:::\n\n\n## Model calibration\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_ad <- gwr.basic(formula = resale_price ~ floor_area_sqm +\n                      storey_order + remaining_lease_mths + \n                      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                      PROX_MRT + PROX_PARK + PROX_MALL +\n                      PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                      WITHIN_1KM_PRISCH,\n                    data=train_data,\n                    bw=20, \n                    kernel = 'gaussian', \n                    adaptive=TRUE,\n                    longlat = FALSE)\n```\n:::\n\n\n## Computing test data bw\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_ad <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 316 CV score: 1.752181e+12 \nAdaptive bandwidth: 203 CV score: 1.635856e+12 \nAdaptive bandwidth: 132 CV score: 1.452381e+12 \nAdaptive bandwidth: 89 CV score: 1.292305e+12 \nAdaptive bandwidth: 61 CV score: 1.115867e+12 \nAdaptive bandwidth: 45 CV score: 1.007764e+12 \nAdaptive bandwidth: 34 CV score: 886240690082 \nAdaptive bandwidth: 28 CV score: 859792519354 \nAdaptive bandwidth: 23 CV score: 856247388819 \nAdaptive bandwidth: 21 CV score: 846203688028 \nAdaptive bandwidth: 19 CV score: 837013751208 \nAdaptive bandwidth: 18 CV score: 8.32968e+11 \nAdaptive bandwidth: 17 CV score: 834218488856 \nAdaptive bandwidth: 18 CV score: 8.32968e+11 \n```\n\n\n:::\n:::\n\n\n## Predicting with test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred <- gwr.predict(formula = resale_price ~ floor_area_sqm +\n                          storey_order + remaining_lease_mths + PROX_CBD +\n                          PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + \n                          PROX_PARK + PROX_MALL + PROX_SUPERMARKET + \n                          WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE +\n                          WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n                        data=train_data, \n                        predictdata = test_data, \n                        bw=20, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n```\n:::\n\n\n## Saving predicted values\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred_df <-as.data.frame(\n  gwr_pred$SDF$prediction) %>%\n  rename(gwr_pred = \"gwr_pred$SDF$prediction\")\n```\n:::\n\n:::\n\n# 8. **Predictive Modelling with RF method**\n\n::: panel-tabset\n## Data preparation\n\nFirstly, code chunk below is used to extract the coordinates of training and test data sets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(HDB_sample)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n\nNext, code chunk below is used to drop the geometry column of both training and test data sets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_nogeom <- train_data %>%\n  st_drop_geometry()\n```\n:::\n\n\n## Calibrating RF model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data_nogeom)\n```\n:::\n\n\n## Model Output\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      1000 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       2289284270 \nR squared (OOB):                  0.8406868 \n```\n\n\n:::\n:::\n\n\n## Preparing the test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom <- cbind(\n  test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\n## Predicting with rf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred <- predict(rf, \n                   data = test_data_nogeom)\n```\n:::\n\n\n## Saving the predicted values\n\nThe output of `predict()` of **ranger** is object of class *ranger* with elements. Code chunk below is used to extract values from *predictions* of predicted classes and save the values in a data frame called *rf_pred_df*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_pred_df <- as.data.frame(rf_pred$predictions) %>%\n  rename(rf_pred = \"rf_pred$predictions\")\n```\n:::\n\n:::\n\n# 9. **Predictive Modelling with SpatialML**\n\n::: panel-tabset\n## Determine bandwidth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngrd_bw_train_ad <- grf.bw(formula = resale_price ~ floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                            PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          dataset=train_data_nogeom, \n                          kernel=\"adaptive\",\n                          coords=coords_train)\n```\n:::\n\n\n## Calibrate with grf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngrf_ad <- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n                PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n                PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                WITHIN_1KM_PRISCH,\n              dframe=train_data_nogeom, \n              bw=20,\n              kernel=\"adaptive\",\n              coords=coords_train)\n```\n:::\n\n\n## Model Output\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_ad\n```\n:::\n\n\n## Prepare test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom <- cbind(\n  test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\n## Predict using test data\n\nIn the code chunk below, `predict.grf()` of **spatialML** for predicting re-sale prices in the **test data** set (i.e. *test_data_nogeom*)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred <- predict.grf(grf_ad, \n                         test_data_nogeom,\n                         x.var.name=\"X\",\n                         y.var.name=\"Y\", \n                         local.w=1,\n                         global.w=0)\n```\n:::\n\n\n## Save predicted values\n\nNext, the code chunk below is used to convert the output from *grf_pred* into a data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrf_pred_df <- as.data.frame(grf_pred)\n```\n:::\n\n:::\n\n# 10. Model Comparison\n\n## 10.1 Combine model outputs\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_pred <- test_data %>%\n  select(resale_price) %>%\n  cbind(gwr_pred_df) %>%\n  cbind(rf_pred_df) %>%\n  cbind(grf_pred_df)\n```\n:::\n\n\n## 10.2 Transposing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_longer <- test_data_pred %>%\n  st_drop_geometry() %>%\n  pivot_longer(cols = ends_with(\"pred\"), \n               names_to = \"model\", \n               values_to = \"predicted\")\n```\n:::\n\n\n## 10.3 Renaming columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_labels <- c(\n  gwr_pred = \"gwr\",\n  rf_pred = \"Random Forest\",\n  grf_pred = \"gwRF\")\n\ntest_longer <- test_longer %>%\n  mutate(model = recode(\n    model, !!!model_labels))\n```\n:::\n\n\n## 10.4 Computing RMSE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse_results <- test_longer %>%\n  group_by(model) %>%\n  rmse(truth = resale_price, \n       estimate = predicted) %>%\n  rename(rmse = .estimate) %>%\n  select(model, rmse)\n```\n:::\n\n\n## 10.5 Model Comparison Plots\n\n### 10.5.1 Bar Charts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(rmse_results, \n       aes(x = reorder(model, rmse), \n           y = rmse, \n           fill = \"skyblue\")) +\n  geom_bar(stat = \"identity\", \n           fill = \"skyblue\", \n           color = \"black\", \n           width = 0.7) +\n  labs(title = \"RMSE Comparison of Models\", \n       y = \"RMSE\", \n       x = \"Model\") +\n  theme_minimal()\n```\n:::\n\n\n![](images/clipboard-992338838.png)\n\n### 10.5.2 Scatter Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_longer <- test_longer %>%\n  left_join(rmse_results, \n            by = \"model\")\n\nggplot(data = test_longer,\n       aes(x = predicted,\n           y = resale_price)) +\n  facet_wrap(~ model) +\n  geom_point() +\n  geom_text(data = test_longer, \n            aes(x = Inf, y = Inf, \n                label = paste(\"RMSE:\", round(rmse, 2))),\n            hjust = 1.1, vjust = 1.1, \n            color = \"black\", size = 4)\n```\n:::\n\n\n![](images/clipboard-2377153877.png)\n\n## 10.6 Variable Importance\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare the output\nvar_imp <- data.frame(\n  Variable = names(grf_ad$Global.Model$variable.importance),\n  Importance = grf_ad$Global.Model$variable.importance\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot\nggplot(var_imp, aes(x = reorder(Variable, \n                                Importance), \n                    y = Importance)) +\n  geom_bar(stat = \"identity\", \n           fill = \"skyblue\") +\n  coord_flip() +\n  labs(\n    title = \"Variable Importance from Ranger Model\",\n    x = \"Variables\",\n    y = \"Importance\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n![](images/clipboard-3293328120.png)\n",
    "supporting": [
      "In-class_Ex12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}