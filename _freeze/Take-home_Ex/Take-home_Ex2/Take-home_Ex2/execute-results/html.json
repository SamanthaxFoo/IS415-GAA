{
  "hash": "b761a1a712ec773a8db21b4023be4866",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nsubtitle: \"Harnessing Geospatial Methods to Analyse Drug Abuse Patterns in Thailand\"\nauthor: \"Foo Jia Yi Samantha\"\ndate-modified: 10/13/2024\ndate: 10/13/2024\nformat: \n  html:\n    toc-depth: 5\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, st, tidyverse, lubridate, sfdep, tmap, ggplot2, knitr, Kendall)\n```\n:::\n\n\n## 9. Emerging Hot Spot Analysis (EHSA)\n\n\n\n\n\nAs mentioned in the Methods Used section, **Emerging Hot Spot Analysis** is a useful technique to identify trends and changes in spatial patterns over time, particularly for identifying evolving intensifying or diminishing clusters (hot spots or cold spots) over time.\n\nThe main idea of ESHA is that it integrates the **Getis-Ord Gi\\* statistic** to identify hotspots with the **Mann-Kendall test** to assess trends over time. In our study, we will begin by calculating the Getis-Ord Gi\\* statistic, followed by the Mann-Kendall trend test. Finally, we will perform the EHSA to complete the analysis.\n\n### **9.1 Local Getis-Ord `Gi*`** for **Hot Spot and Cold Spot Area Analysis (HSCA)**\n\n#### 9.1.1 A Brief Introduction\n\nThe concept of hot spot analysis originated in the field of **spatial statistics** during the late 20th century, with contributions from statisticians such as Arthur Getis and J. Keith Ord, who developed the **Getis-Ord G and G**\\* statistics in the early 1990s.\n\nThe **Gi\\* statistic** is calculated as the ratio of the **weighted average of value**s from neighboring locations to the total sum of all values, excluding the value at the specific location in question. In contrast, the **G statistic** includes the value from the focal (or self) location within the neighborhood. Both G and Gi\\* statistics employ a **distance-based approach** for spatial weights, meaning that the spatial weights identify statistically significant hot and cold spots by evaluating nearby locations within a defined distance.\n\n#### 9.1.2 Compute Spatial Weight Matrix\n\nWith that said, I will employ the the local **Gi\\* statistics** but before we compute it, we need to calculate the spatial weight matrix. To do so, I will employ `st_contiguity()` to create a neighbour list and use `include_self()` to include the focal observation in the neighbour list. Next, we use the neighbour list to create a weight list using `st_inverse_distance()` function.\n\n**1) For Drug Cases by Province**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw_province <- drug_cases_province %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\n**2) For Drug Cases by Province and Year**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw_year <- drug_cases_province_year %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n```\n:::\n\n\n**3) For Drug Cases by Province and Case Type**\n\n\n::: {.cell Code-summary='Function for spatial weight matrix calculation after filtering'}\n\n```{.r .cell-code  code-fold=\"true\"}\ncompute_spatial_weight <- function(filtered_data) {\n  spatial_weight <- filtered_data %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n  \n  return(spatial_weight)\n}\n\n# Filter by offense type and then group by province_en\ndrug_use_cases_gi <- drug_cases %>%\n  filter(types_of_drug_offenses %in% c(\"drug_use_cases\", \"suspects_in_drug_use_cases\")) %>%\n  group_by(province_en) %>%\n  summarise(\n    total_cases = sum(no_cases),\n    ADM1_PCODE = first(ADM1_PCODE),\n    geometry = first(geometry),\n    .groups = \"drop\"\n  ) %>%\n  st_as_sf() %>%\n  compute_spatial_weight()\n\npossession_cases_gi <- drug_cases %>%\n  filter(types_of_drug_offenses %in% c(\"possession_cases\", \"suspects_in_possession_cases\", \n                                       \"possession_with_intent_to_distribute_cases\", \n                                       \"suspects_in_possession_with_intent_to_distribute_cases\")) %>%\n  group_by(province_en) %>%\n  summarise(\n    total_cases = sum(no_cases),\n    ADM1_PCODE = first(ADM1_PCODE),\n    geometry = first(geometry),\n    .groups = \"drop\"\n  ) %>%\n  st_as_sf() %>%\n  compute_spatial_weight()\n\ntrafficking_cases_gi <- drug_cases %>%\n  filter(types_of_drug_offenses %in% c(\"trafficking_cases\", \"suspects_in_trafficking_cases\")) %>%\n  group_by(province_en) %>%\n  summarise(\n    total_cases = sum(no_cases),\n    ADM1_PCODE = first(ADM1_PCODE),\n    geometry = first(geometry),\n    .groups = \"drop\"\n  ) %>%\n  st_as_sf() %>%\n  compute_spatial_weight()\n\nimport_export_cases_gi <- drug_cases %>%\n  filter(types_of_drug_offenses %in% c(\"import_cases\", \"suspects_in_import_cases\", \n                                       \"export_cases\", \"suspects_in_export_cases\")) %>%\n  group_by(province_en) %>%\n  summarise(\n    total_cases = sum(no_cases),\n    ADM1_PCODE = first(ADM1_PCODE),\n    geometry = first(geometry),\n    .groups = \"drop\"\n  ) %>%\n  st_as_sf() %>%\n  compute_spatial_weight()\n\nconspiracy_cases_gi <- drug_cases %>%\n  filter(types_of_drug_offenses %in% c(\"conspiracy_cases\", \"suspects_in_conspiracy_cases\")) %>%\n  group_by(province_en) %>%\n  summarise(\n    total_cases = sum(no_cases),\n    ADM1_PCODE = first(ADM1_PCODE),\n    geometry = first(geometry),\n    .groups = \"drop\"\n  ) %>%\n  st_as_sf() %>%\n  compute_spatial_weight()\n```\n:::\n\n\n#### 9.1.3 Compute Local *`Gi*`* Statistics\n\nNext, we will compute the local *Gi\\** statistic using the `local_gstart_perm()` function from the **sfdep** package. This function takes a neighbor list (`nb`) and a weight list (`wt`) as inputs and generates Gi\\* statistics through a Monte Carlo permutation with a specified number of simulations (`nsim`). The results will be saved into a new object named `HCSA__province` and `HCSA_year`.\n\n**1) For Drug Cases by Province**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_province <- wm_idw_province %>% \n  mutate(local_Gi_star = local_gstar_perm(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi_star)\n```\n:::\n\n\n**2) For Drug Cases by Province and Year**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_year <- wm_idw_year %>% \n  mutate(local_Gi_star = local_gstar_perm(\n    total_cases, nb, wt, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi_star)\n```\n:::\n\n\n**3) For Drug Cases by Province and Case Type**\n\n\n::: {.cell Code-fold='true' Code-summary='Function for Significant Gi* calculation after filtering'}\n\n```{.r .cell-code}\ncompute_gi_star <- function(filtered_data) {\n  gi_star_results <- filtered_data %>% \n                    mutate(local_Gi_star = local_gstar_perm(\n                      total_cases, nb, wt, nsim = 99),\n                           .before = 1) %>%\n                      unnest(local_Gi_star) %>%\n                      filter(p_sim < 0.05) %>% \n                      mutate(label = paste(ADM1_PCODE, province_en))\n    \n  return(gi_star_results)\n}\n\n# Filter by offense type and then group by province_en\ndrug_use_cases_gi_sig <- drug_use_cases_gi %>%\n  compute_gi_star()\n\npossession_cases_gi_sig <- possession_cases_gi %>%\n  compute_gi_star()\n\ntrafficking_cases_gi_sig <- trafficking_cases_gi %>%\n  compute_gi_star() \n\nimport_export_cases_gi_sig <- import_export_cases_gi %>%\n  compute_gi_star()\n\nconspiracy_cases_gi_sig <- conspiracy_cases_gi %>%\n  compute_gi_star()\n```\n:::\n\n\n#### 9.1.4 Create a New `label` Column\n\nSimilar to what we did in Moran I's computations, we'll create a new `label` column to assist us with our visualisations later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_province <- HCSA_province %>%\n  mutate(label = paste(ADM1_PCODE, province_en))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_year <- HCSA_year %>%\n  mutate(label = paste(ADM1_PCODE, province_en))\n```\n:::\n\n\n### 9.2 Visualising Local Getis-Ord `Gi*` Results\n\n#### **1) Overall Local `Gi*` Results**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot overall hotspots and coldspots\"}\ntmap_mode(\"plot\")  \ngi_star_plot <- tm_shape(HCSA_province)+\n  tm_fill(\"gi_star\", \n          # blue, yellow, orange, red\n          palette = c(\"#87CEFA\",\"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n          colorNA = \"#FFFFFF\",\n          title = \"Gi*\",\n          midpoint = 0) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"Hotspots & Coldspots of Drug Cases\\n in Study Area (Using Gi*)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ncluster_plot <- tm_shape(HCSA_province)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Hotspots & Coldspots of Drug Cases\\n in Study Area (Using Cluster Category)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(gi_star_plot, cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-2192504222.png)\n\n::: {.callout-tip title=\"Observations\"}\nThere is a majority of negative local Gi\\* values **(-2 to 0)** found interspersed across the central and western provinces of Thailand **(blue)** which coincides with **low cluster** categories, suggesting that these are clusters of provinces that have well-controlled the spread of drug offenses.\n\nOn the other hand, out of all hotspots found on the right chart **(yellow)**, majority of the positive Gi\\* values were found to be in the lower range **(0 to 2).** The implication here is that while these provinces are classified as hotspots, they aren't showing **statistically significant** or **intensely concentrated** drug activity, especially compared to areas with Gi\\* values higher than 2. These provinces may still be of concern for law enforcement, but the clustering of drug cases isn't as severe as in other regions.\n\nIn contrast, of all the **high cluster** categories **(blue)**, there are four provinces in south-central Thailand **(orange & red)** marked with a **higher Gi**\\* value (i.e., \\> 2) which indicates much stronger clustering of drug offenses, suggesting more serious or widespread drug-related issues in those locations.\n:::\n\n#### **2) Statistically Significant Local** `Gi*` Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Retrieve statistically significant data\nHCSA_province_sig <- HCSA_province %>%\n  filter(p_sim < 0.05)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot statistically significant hotspots and coldspots\"}\ntmap_mode(\"plot\")\nsig_gi_star_plot <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\")+\ntm_shape(HCSA_province_sig)+\n  tm_fill(\"gi_star\", \n          # blue, yellow, orange, red\n          palette = c(\"#87CEFA\",\"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n          title = \"Gi*\",\n          midpoint = 0,\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area (Using Gi*)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.hist.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\nsig_cluster_plot <- tm_shape(thai_boundary) + \n      tm_borders(alpha = 0.6) + \n      tm_fill()+\ntm_shape(HCSA_province_sig)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area (Using Cluster Type)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(sig_gi_star_plot, sig_cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-2386267957.png)\n\n::: {.callout-tip title=\"Observations\"}\nOf all statistically significant local Gi\\* observed (left chart), there are four provinces in the West of Thailand with negative Gi\\* values **(blue)** which coincides with **coldspots** areas **(blue)** on the right chart where low observations of drug offenses are spatially clustered.\n\nIn contrast, there are two provinces displaying **positive Gi**\\* values in **south-central** **(red)** and **southern** **(orange)** Thailand. The former (south-central) shows a statistically stronger clustering of high drug offenses compared to the latter (southern Thailand), where the clustering of high offenses is less significant.\n\nHowever, the province in the **south of Thailand** on the **right chart** tells a different story. Instead of high values, it shows a statistically significant clustering of **low drug offenses**. This indicates a **coldspot**, where drug offenses are **less frequent** than expected, signaling an area where drug-related activities are significantly **lower** compared to other regions. This could happen as the **cluster type** takes a broader spatial context into account.\n:::\n\n#### **3) Top 3 *Hotspots* Observed**\n\nIn the context of **Getis-Ord Gi**\\* statistics, hotspots and cold spots are generally identified based on the values of the Gi\\* statistic calculated for spatial data as such:\n\n-   **Hotspot:** Gi\\* \\> 2 (high concentration of high values)\n\n-   **Cold Spot:** Gi\\* \\< -2 (high concentration of low values)\n\nHowever, with reference to the histogram below, we can see that the spread of Gi\\* values range from -2 to 0 and 0 to 10, with only a few values exceeding **2**. Hence, I will adjust the definitions accordingly.\n\n-   **Hotspot:** Gi\\* \\> 0 (high concentration of high values)\n\n-   **Cold Spot:** Gi\\* \\< 0 (high concentration of low values)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(HCSA_province, aes(x = gi_star)) + \n  geom_histogram(bins = 20, color = \"white\", fill = \"skyblue2\") + \n  labs(x = \"Gi*\", y = \"Count\", title = \"Histogram of Local Gi* Statistics\") +\n  theme_minimal() + \n  theme(\n    plot.title = element_text(hjust = 0.5, size = 12, face = \"bold\")\n  )\n```\n:::\n\n\n![](images/clipboard-4275990065.png)\n\nHence, let's retrieve the three provinces with highest local Gi\\* values and lowest local Gi\\* values respectively. These provinces will highlight areas that need further investigation via the **Mann-Kendall Trend Test** later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n```\n:::\n\n\n::: panel-tabset\n###### **Overall Hotspots**\n\nBy identifying all provinces with **Gi\\* \\> 0,** we discovered the top 3 provinces with the greatest clustering of drug cases are found in Amnat Charoen, Bangkok and Buri Ram **(red)**. In other words, these provinces showed to be the **greatest hotspot** for drug offenses to occur both locally and in its surrounding provinces. Such high concentration of drug crimes suggest a need for interventions of stricter law enforcement to curb the further spread of drug cases to its neighbours.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthree_hotspots_overall <- (head((HCSA_province[HCSA_province$gi_star > 0,]), 3)$label)\nthree_hotspots_overall\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"TH37 Amnat Charoen\" \"TH10 Bangkok\"       \"TH31 Buri Ram\"     \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_three_hotspots_overall <- HCSA_province %>% filter(label %in% three_hotspots_overall)\n\ntmap_mode(\"plot\")\ntm_shape(thai_boundary) + \n  tm_borders(col = \"black\", lwd = 1) + \n  tm_fill(col = \"#F5F5F5\")+\ntm_shape(HCSA_three_hotspots_overall)+\n  tm_fill(\"gi_star\", \n          palette = c(\"#ff6b6b\")) + # red\n  tm_borders(col = \"black\", alpha = 0.6) +\n  tm_text(\"label\",size = 0.5, col = \"white\", just = c(\"RIGHT\",\"bottom\"),\n          bg.color = \"black\", bg.alpha = 0.7, fontface = \"bold\",\n          remove.overlap = TRUE) +\n  tm_layout(main.title = \"Top 3 Overall Hotspots\\nof Drug Cases in Study Area (Thailand)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.show = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n```\n:::\n\n\n![](images/clipboard-24530355.png)\n\n###### **Statistically Significant Hotspots**\n\nWith that said, we can observe that statistically significant hotspots (i.e. p-value \\< 0.05) resulted in a different set of provinces, namely Nonthaburi, Phatthalung and Samut Prakan. As indicated in the **red regions** below, Nonthaburi and Samut Prakan provinces are relatively close to each other and are likely part of a **larger cluster of drug hotspots** with the potential risk of causing a **spill-over effect** to its neighbours.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthree_hotspots_sig <- (head((HCSA_province_sig[HCSA_province_sig$gi_star > 0,]), 3)$label)\nthree_hotspots_sig\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"TH12 Nonthaburi\"   \"TH11 Samut Prakan\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_three_hotspots_sig <- HCSA_province_sig %>% filter(label %in% three_hotspots_sig)\n\ntmap_mode(\"plot\")\ntm_shape(thai_boundary) + \n  tm_borders(col = \"black\", lwd = 1) + \n  tm_fill(col = \"#F5F5F5\")+\ntm_shape(HCSA_three_hotspots_sig)+\n  tm_fill(\"gi_star\", \n          palette = c(\"#ff6b6b\")) + # red\n  tm_borders(col = \"black\", alpha = 0.6) +\n  tm_text(\"label\",size = 0.5, col = \"black\", just = c(\"left\",\"bottom\"),\n          fontface = \"bold\") +\n  tm_layout(main.title = \"Top 3 Most Statistically Significant Hotspots\\nof Drug Cases in Study Area (Thailand)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.show = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n```\n:::\n\n\n![](images/clipboard-2811724003.png)\n:::\n\n#### **4) Top 3 *Coldspots* Observed**\n\n::: panel-tabset\n###### **Overall Coldspots**\n\nBy filtering all observations where **Gi\\* \\< 0**, we identified that the top three provinces with the strongest signs of clustering of **low** number of drug cases are found in Ang Thong, Bueng Kan and Chai Nat provinces **(blue)**. The provinces Ang Thong and Chai Nat are relatively close to each other which indicates a region where strong clusters of low number of drug cases are located together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthree_coldpots_overall <- (head((HCSA_province[HCSA_province$gi_star < 0,]), 3)$label)\nthree_coldpots_overall\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"TH15 Ang Thong\" \"TH38 Bueng Kan\" \"TH18 Chai Nat\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_three_coldpots_overall <- HCSA_province %>% filter(label %in% three_coldpots_overall)\n\ntmap_mode(\"plot\")\ntm_shape(thai_boundary) + \n  tm_borders(col = \"black\", lwd = 1) + \n  tm_fill(col = \"#F5F5F5\")+\ntm_shape(HCSA_three_coldpots_overall)+\n  tm_fill(\"gi_star\", \n          palette = c(\"#87CEFA\")) + # blue\n  tm_borders(col = \"black\", alpha = 0.6) +\n  tm_text(\"label\",size = 0.5, col = \"black\", just = c(\"right\",\"bottom\"),\n          fontface = \"bold\") +\n  tm_layout(main.title = \"Top 3 Overall Coldspots\\nof Drug Cases in Study Area (Thailand)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.show = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n```\n:::\n\n\n![](images/clipboard-1521675171.png)\n\n###### **Statistically Significant Coldspots**\n\nWe are more interested in the statistically significant coldspots (i.e., p-value \\< 0.05) as we can more confidently say that these provinces are clusters of low number of drug offenses. In particular, the top three provinces with lowest Gi\\* values are Chai Nat, Kamphaeng Phet and Nakhon Sawan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthree_coldpots_sig <- (head((HCSA_province_sig[HCSA_province_sig$gi_star < 0,]), 3)$label)\nthree_coldpots_sig\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"TH18 Chai Nat\"       \"TH62 Kamphaeng Phet\" \"TH60 Nakhon Sawan\"  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_three_coldspots_sig <- HCSA_province_sig %>% filter(label %in% three_coldpots_sig)\n\ntmap_mode(\"plot\")\ntm_shape(thai_boundary) + \n  tm_borders(col = \"black\", lwd = 1) + \n  tm_fill(col = \"#F5F5F5\")+\ntm_shape(HCSA_three_coldspots_sig)+\n  tm_fill(\"gi_star\", \n          palette = c(\"#87CEFA\")) + # blue\n  tm_borders(col = \"black\", alpha = 0.6) +\n  tm_text(\"label\",size = 0.5, col = \"black\", just = c(\"center\",\"right\"),\n          fontface = \"bold\",remove.overlap = TRUE) +\n  tm_layout(main.title = \"Top 3 Most Statistically Significant Coldspots\\nof Drug Cases in Study Area (Thailand)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.show = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n```\n:::\n\n\n![](images/clipboard-74309679.png)\n:::\n\n### 9.3 Visualising Local Getis-Ord `Gi*` by *Fiscal Year*\n\n#### **1) Overall Local `Gi*` Results**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated yearly hot and cold spots\"}\ntmap_mode(\"plot\")\nHCSA_maps_list <- list()\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(HCSA_year$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- HCSA_year %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    HCSA_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  palette = c(\"#87CEFA\",\"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n                  colorNA = \"#FFFFFF\",\n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Overall Hotspots & Coldspots of Drug Cases in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    HCSA_maps_list[[year]] <- HCSA_map\n  }\n}\ntemporal_maps <- HCSA_maps_list[!sapply(HCSA_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/HCSA_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/HCSA_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nAcross 2017 to 2022, we see a consistent mapping of local Gi\\* values for each province, meaning there is no difference in the spatial distribution of drug offense hotspots **(yellow, orange & red)** and coldspots **(blue)** in Thailand during these periods.\n\nSince provinces identified as hotspots for drug offenses have not shifted over time, this could indicate **persistent problems** in certain provinces **(orange & red)**, where drug-related activities remain high year after year.\n\nHence, the lack of variation in hotspots and coldspots may suggest that any interventions or law enforcement efforts aimed at reducing drug offenses have not had a **substantial impact**. Additionally, there could be underlying socio-economic or environmental factors that continue to **perpetuate** these drug offenses year on year.\n:::\n\n#### **2) Statistically Significant Local** `Gi*` Results\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated statistically significant yearly hot and cold spots\"}\ntmap_mode(\"plot\")\nHCSA_year_sig <- HCSA_year %>%\n  filter(p_sim < 0.05)\n\nHCSA_maps_list <- list()\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(HCSA_year_sig$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- HCSA_year_sig %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    HCSA_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\")+\n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  palette = c(\"#87CEFA\",\"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Statistically Significant Hotspots & Coldspots of Drug Cases in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    HCSA_maps_list[[year]] <- HCSA_map\n  }\n}\ntemporal_maps <- HCSA_maps_list[!sapply(HCSA_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/HCSA_Sig_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/HCSA_Sig_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nThe statisitcally significant Gi\\* results (i.e. p-value \\< 0.05) show us similar spatial trends where there is low to no shifts in drug hotspots and coldspots in Thailand.\n\nOverall, the **lack of significant change in Gi\\* values** across the years underscores the ongoing challenges in managing and mitigating drug-related issues in Thailand, requiring sustained efforts to tackle these persistent hotspots.\n:::\n\n### 9.3 Visualising Local Getis-Ord `Gi*` by *Drug Case Type*\n\nWith that said, it will be more interesting to delve into the five drug case types previously discussed for a more nuanced analysis of drug hotspots and coldspots, measured by local Gi\\* values, across Thailand's provinces. I will also delve into the spatio-temporal changes in patterns observed from 2017 to 2022.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Prepare local Gi* computations by case type and year\nsummarize_cases <- function(filtered_data, offense_types) {\n  filtered_data %>%\n    filter(types_of_drug_offenses %in% offense_types) %>%\n    group_by(province_en, fiscal_year) %>%\n    summarise(\n      total_cases = sum(no_cases),\n      ADM1_PCODE = first(ADM1_PCODE),\n      geometry = first(geometry),\n      .groups = \"drop\"\n    ) %>%\n    st_as_sf() %>%\n    compute_spatial_weight()\n}\n\n# General function to compute the Gi* statistic\ncompute_gi_star <- function(filtered_data) {\n  filtered_data %>%\n    mutate(local_Gi_star = local_gstar_perm(total_cases, nb, wt, nsim = 99), .before = 1) %>%\n    unnest(local_Gi_star) %>%\n    filter(p_sim < 0.05) %>%\n    mutate(label = paste(ADM1_PCODE, province_en))\n}\n\n# Offense types categories\noffense_types_list <- list(\n  drug_use = c(\"drug_use_cases\", \"suspects_in_drug_use_cases\"),\n  possession = c(\"possession_cases\", \"suspects_in_possession_cases\", \n                 \"possession_with_intent_to_distribute_cases\", \n                 \"suspects_in_possession_with_intent_to_distribute_cases\"),\n  trafficking = c(\"trafficking_cases\", \"suspects_in_trafficking_cases\"),\n  import_export = c(\"import_cases\", \"suspects_in_import_cases\", \n                    \"export_cases\", \"suspects_in_export_cases\"),\n  conspiracy = c(\"conspiracy_cases\", \"suspects_in_conspiracy_cases\")\n)\n\n# Apply the summarize_cases and compute_gi_star functions for each offense type\ngi_star_results_list <- lapply(offense_types_list, function(offense_types) {\n  summarize_cases(drug_cases, offense_types) %>% compute_gi_star()\n})\n\n# Access results for each offense type\ndrug_use_cases_gi_sig_year <- gi_star_results_list$drug_use\npossession_cases_gi_sig_year <- gi_star_results_list$possession\ntrafficking_cases_gi_sig_year <- gi_star_results_list$trafficking\nimport_export_cases_gi_sig_year <- gi_star_results_list$import_export\nconspiracy_cases_gi_sig_year <- gi_star_results_list$conspiracy\n```\n:::\n\n\n##### **1) Case Type: Drug Use**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot statistically significant hotspots and coldspots\"}\ntmap_mode(\"plot\")\nsig_gi_star_plot <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\")+\ntm_shape(drug_use_cases_gi_sig)+\n  tm_fill(\"gi_star\", \n          # blue, yellow, orange, red\n          palette = c(\"#87CEFA\",\"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n          title = \"Gi*\",\n          midpoint = 0,\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Gi* (Drug Use)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.hist.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\nsig_cluster_plot <- tm_shape(thai_boundary) + \n      tm_borders(alpha = 0.6) + \n      tm_fill()+\ntm_shape(drug_use_cases_gi_sig)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Cluster (Drug Use)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(sig_gi_star_plot, sig_cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-3263724512.png)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated yearly drug use cases\"}\ntmap_mode(\"plot\")\ndrug_use_maps_list <- list()\n\n# Define the case type for the title\ncase_type <- \"Drug Use Cases\"\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(drug_use_cases_gi_sig_year$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- drug_use_cases_gi_sig_year %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    drug_use_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\") +\n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  palette = c(\"#87CEFA\", \"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Statistically Significant Hotspots & Coldspots of\", case_type, \"in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    drug_use_maps_list[[year]] <- drug_use_map\n  }\n}\n\n# Filter out null maps and create the animation\ntemporal_maps <- drug_use_maps_list[!sapply(drug_use_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/Drug_Use_HCSA_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/Drug_Use_HCSA_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nFrom 2017 to 2022, there are consistently negative significant Gi\\* values observed in the western provinces and a province found in the extreme south **(blue)**. These provinces have proved to be effective in their control of **drug use** cases as they persist as regions of coldspots. Similarly, there is a **strong presence** of statistically significant hotspots that has formed near the boundary of Thailand **(orange & red)** which is worrying as this shows **no improvement** in curbing the spread of drug use cases. In other words, these provinces continue to be concentrated with high drug use activities.\n:::\n\n##### **2) Case Type: Possession**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot statistically significant hotspots and coldspots\"}\ntmap_mode(\"plot\")\nsig_gi_star_plot <- tm_shape(thai_boundary) + \n  tm_borders(col = \"black\", lwd = 1) + \n  tm_fill(col = \"#F5F5F5\") +\n\n  tm_shape(possession_cases_gi_sig) +\n  tm_fill(\"gi_star\", \n          palette = c(\"#87CEFA\", \"#4682B4\"),  # Light blue and darker blue\n          breaks = c(-Inf, -2, -1.5, 0),      \n          title = \"Gi*\",\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n\n  tm_borders(col = \"black\", alpha = 0.6) +\n  \n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Gi* (Possession)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.hist.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", text.size = 0.7, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 0.5) +\n  tm_grid(labels.size = 0.5, alpha = 0.2)\n\nsig_cluster_plot <- tm_shape(thai_boundary) + \n      tm_borders(alpha = 0.6) + \n      tm_fill()+\ntm_shape(possession_cases_gi_sig)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Cluster (Possession)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(sig_gi_star_plot, sig_cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-1935051200.png)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated yearly possession cases\"}\ntmap_mode(\"plot\")\npossession_maps_list <- list()\n\n# Define the case type for the title\ncase_type <- \"Possession Cases\"\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(possession_cases_gi_sig_year$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- possession_cases_gi_sig_year %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    possession_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\") +\n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  palette = c(\"#87CEFA\", \"#fcd34d\", \"#f7a87d\", \"#ff6b6b\"),\n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Statistically Significant Hotspots & Coldspots of\", case_type, \"in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    possession_maps_list[[year]] <- possession_map\n  }\n}\n\n# Filter out null maps and create the animation\ntemporal_maps <- possession_maps_list[!sapply(possession_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/Possession_HCSA_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/Possession_HCSA_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nWhen it comes to drug possession cases, it follows the general trend where **coldspots** (i.e. low negative Gi\\* values) of drug possession offenses persist in the **Western** provinces of Thailand **(blue)** while **hotspots** for drug possession activities are more concentrated in the Southern provinces **(orange)** with the highest offenses found in a south-central province **(red).**\n\nLikewise, the stability of Gi\\* values across each year indicates that the spatial distribution of drug offenses remains **relatively unchanged over time**. This consistency may imply that the underlying factors contributing to the clustering of offenses are persistent. Similarly, areas that consistently exhibit negative Gi\\* values are coldspots, indicating lower spread and incidences of drug offenses.\n:::\n\n##### **3) Case Type: Trafficking**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot statistically significant hotspots and coldspots\"}\ntmap_mode(\"plot\")\nsig_gi_star_plot <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\")+\ntm_shape(trafficking_cases_gi_sig)+\n  tm_fill(\"gi_star\", \n          # blue, yellow, orange, orange-red, red\n          palette = c(\"#87CEFA\",\"#fcd34d\",\"#f7a87d\",\"#f88379\", \"#ff6b6b\"),\n          breaks = c(-2, 0, 1, 2, 3, 4),   \n          title = \"Gi*\",\n          midpoint = 0,\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Gi* (Trafficking)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.hist.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\nsig_cluster_plot <- tm_shape(thai_boundary) + \n      tm_borders(alpha = 0.6) + \n      tm_fill()+\ntm_shape(trafficking_cases_gi_sig)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Cluster (Trafficking)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(sig_gi_star_plot, sig_cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-1982224130.png)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated yearly trafficking cases\"}\ntmap_mode(\"plot\")\ntrafficking_maps_list <- list()\n\n# Define the case type for the title\ncase_type <- \"Trafficking Cases\"\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(trafficking_cases_gi_sig_year$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- trafficking_cases_gi_sig_year %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    trafficking_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\") +\n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  # dark blue, blue, light yellow,\n                  # yellow, orange, orange-red, red\n                  palette = c(\"skyblue2\",\"#87CEFA\",\"lightyellow\",\"#fcd34d\",\n                              \"#f7a87d\", \"#f88379\", \"#ff6b6b\"),\n                  breaks = c(-5,-2.5,0,2.5,5,7.5,10),  \n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Statistically Significant Hotspots & Coldspots of\", case_type, \"in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    trafficking_maps_list[[year]] <- trafficking_map\n  }\n}\n\n# Filter out null maps and create the animation\ntemporal_maps <- trafficking_maps_list[!sapply(trafficking_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/Trafficking_HCSA_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/Trafficking_HCSA_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nThroughout 2017 to 2022, the western provinces **(dark blue)** has stayed relatively consistent as a stiatistically significant coldspot, which are great signs of **low** trafficking of drugs. However, there are two provinces in North-Western and Eastern Thailand **(red)** that displayed **consistently high** positive Gi\\* values across multiple years. These locations may require targeted interventions especially along **maritime routes** or other **transport routes** to address the ongoing issue.\n:::\n\n##### **4) Case Type: Import and Export**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot statistically significant hotspots and coldspots\"}\ntmap_mode(\"plot\")\nsig_gi_star_plot <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\")+\ntm_shape(import_export_cases_gi_sig)+\n  tm_fill(\"gi_star\", \n          # blue, yellow, orange, orange-red, red\n          palette = c(\"#87CEFA\",\"#fcd34d\",\"#f7a87d\",\"#f88379\", \"#ff6b6b\"),\n          breaks = c(-2, 0, 2, 4, 6, 8),\n          title = \"Gi*\",\n          midpoint = 0,\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Gi* (Import & Export)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.hist.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\nsig_cluster_plot <- tm_shape(thai_boundary) + \n      tm_borders(alpha = 0.6) + \n      tm_fill()+\ntm_shape(import_export_cases_gi_sig)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Cluster (Import & Export)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(sig_gi_star_plot, sig_cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-1811779937.png)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated yearly import & export cases\"}\ntmap_mode(\"plot\")\nimport_export_maps_list <- list()\n\n# Define the case type for the title\ncase_type <- \"Import & Export Cases\"\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(import_export_cases_gi_sig_year$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- import_export_cases_gi_sig_year %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    import_export_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\") +\n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  # blue, yellow, orange, red\n                  palette = c(\"#87CEFA\",\"#fcd34d\",\"#f7a87d\", \"#ff6b6b\"),\n                  breaks = c(-4, 0, 4, 8, 12),\n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Statistically Significant Hotspots & Coldspots of\", case_type, \"in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    import_export_maps_list[[year]] <- import_export_map\n  }\n}\n\n# Filter out null maps and create the animation\ntemporal_maps <- import_export_maps_list[!sapply(import_export_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/Import_Export_HCSA_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/Import_Export_HCSA_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nInterestingly, the plots reveal that majority of provinces, particularly in central and western Thailand, indicated consistently low import and export drug activities **(blue).** However, from 2018 to 2021, there is a **spill over** of import and exprt drug cases into provinces in the southern part of Thailand, meaning there are increased levels of drug imports and exports into these provinces and its surrounding provinces. **Strong road, rail and air transport links** can allow for high volumes of legitimate cross-border trade which could easily conceal illegal drug operations within normal trading activities.\n\nAnother interesting observation is shown in how some coldspots are located **adjacent** to mild hotspot regions, especially in 2017 and 2022. This contrast could be explained by stricter law enforcement in one province over another, and could also be due to other underlying socio–economic factors.\n:::\n\n##### **5) Case Type: Conspiracy**\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot statistically significant hotspots and coldspots\"}\ntmap_mode(\"plot\")\nsig_gi_star_plot <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\")+\ntm_shape(conspiracy_cases_gi_sig)+\n  tm_fill(\"gi_star\", \n          # blue, yellow, orange, red\n          palette = c(\"#87CEFA\",\"#fcd34d\",\"#f7a87d\",\"#f88379\", \"#ff6b6b\"),\n          title = \"Gi*\",\n          midpoint = 0,\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Gi* (Conspiracy)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.hist.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\nsig_cluster_plot <- tm_shape(thai_boundary) + \n      tm_borders(alpha = 0.6) + \n      tm_fill()+\ntm_shape(conspiracy_cases_gi_sig)+\n  tm_fill(\"cluster\", \n          title = \"Cluster Category\") +\n  tm_borders(alpha = 0.6)+\n  tm_layout(main.title = \"Statistically Significant Hotspots & Coldspots\\nof Drug Cases in Study Area by Cluster (Conspiracy)\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.6,\n            legend.text.size = 0.6,\n            legend.outside = FALSE,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 0.7, size = 2, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=0.5) +\n  tm_grid(labels.size = 0.5, alpha =0.2)\n\ntmap_arrange(sig_gi_star_plot, sig_cluster_plot, asp=1, ncol=2)\n```\n:::\n\n\n![](images/clipboard-1241733855.png)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot animated yearly conspiracy cases\"}\ntmap_mode(\"plot\")\nconspiracy_maps_list <- list()\n\n# Define the case type for the title\ncase_type <- \"Conspiracy Cases\"\n\n# Loop over each unique fiscal year to create maps\nfor (year in unique(conspiracy_cases_gi_sig_year$fiscal_year)) {\n  # Filter the data for the current year\n  year_data <- conspiracy_cases_gi_sig_year %>% filter(fiscal_year == year)\n  \n  # Only create the map if there are significant results\n  if (nrow(year_data) > 0) {\n    conspiracy_map <- tm_shape(thai_boundary) + \n      tm_borders(col = \"black\", lwd = 1) + \n      tm_fill(col = \"#F5F5F5\") +\n      tm_shape(year_data) + \n      tm_polygons(\"gi_star\", \n                  # blue, yellow, orange, red\n                  palette = c(\"#87CEFA\",\"#fcd34d\",\"#f7a87d\", \"#ff6b6b\"),\n                  breaks = c(-4, 0, 4, 8, 12),\n                  title = \"Statistically Significant Gi*\",\n                  midpoint = NA,\n                  legend.hist = TRUE, \n                  legend.is.portrait = TRUE,\n                  legend.hist.z = 0.1) +\n      tm_layout(main.title = paste(\"Statistically Significant Hotspots & Coldspots of\", case_type, \"in Thailand -\", year),\n                main.title.position = \"center\",\n                main.title.size = 1,\n                main.title.fontface = \"bold\",\n                legend.title.size = 1,\n                legend.text.size = 1,\n                legend.hist.size = 1,\n                legend.outside = TRUE,\n                legend.outside.position = \"right\",\n                frame = TRUE) +\n      tm_compass(type = \"8star\", text.size = 1, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n      tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 1) +\n      tm_grid(alpha = 0.2)\n\n    # Store the significant map in the list\n    conspiracy_maps_list[[year]] <- conspiracy_map\n  }\n}\n\n# Filter out null maps and create the animation\ntemporal_maps <- conspiracy_maps_list[!sapply(conspiracy_maps_list, is.null)]\ntmap_animation(temporal_maps, filename = \"images/Conspiracy_HCSA_Year.gif\", delay = 150, width = 1090, height = 674)\n```\n:::\n\n\n![](images/Conspiracy_HCSA_Year.gif)\n\n::: {.callout-tip title=\"Observations\"}\nAcross all years, drug-related conspiracy cases seem to be the **least widespread** as compared to other drug case types.\n\nConspiracy laws in Thailand require proof of intent and agreement between two or more parties to commit an illegal act. However, proving such intent in court requires more than just suspicion, which can make conspiracy cases **more challenging** than straightforward drug offenses, like possession or trafficking.\n\nHence, it is not surprising that conspiracy cases are more **localised** to certain provinces, e.g. south-central region **(red),** and with little to no improvements/worsening of drug cases across each year. These provinces coincides with the **high cluster category (yellow)** observed above. However, the complexity of uncovering and prosecuting drug conspiracy cases in Thailand may mean drug conspiracy cases can be more under-represented than we expect.\n:::\n\n### 9.4 Local Getis-Ord `Gi*` for Each Fiscal Year\n\nIn this section, I will focus on preparing data that delves into the **yearly** drug cases found at the province level which will provide us insights into the spatial and temporal aspects of drug offenses in Thailand's provinces. I will employ the `drug_cases_spt` spacetime object we previously created.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrugs_nb <- drug_cases_spt %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %>%\n    set_nbs(\"nb\") %>%\n    set_wts(\"wt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n! Polygon provided. Using point on surface.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(drugs_nb)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nspacetime ────\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nContext:`data`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n77 locations `ADM1_PCODE`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n6 time periods `fiscal_year`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── data context ────────────────────────────────────────────────────────────────\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  ADM1_PCODE province_en              fiscal_year total_cases nb        wt    \n  <chr>      <chr>                          <dbl>       <dbl> <list>    <list>\n1 TH10       Bangkok                         2017       60067 <int [7]> <dbl> \n2 TH11       Samut Prakan                    2017       12452 <int [3]> <dbl> \n3 TH12       Nonthaburi                      2017        7348 <int [5]> <dbl> \n4 TH13       Pathum Thani                    2017        7616 <int [7]> <dbl> \n5 TH14       Phra Nakhon Si Ayutthaya        2017        6221 <int [8]> <dbl> \n6 TH15       Ang Thong                       2017        1614 <int [5]> <dbl> \n```\n\n\n:::\n:::\n\n\nNext, I will harness `group_by()` to group our data by the **fiscal_year** variable since we are interested in understanding the spatio-temporal dynamics of drug cases across each year from 2017 to 2022.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars_year <- drugs_nb %>%\n  group_by(fiscal_year) %>%\n  mutate(gi_star = local_gstar_perm(total_cases, nb, wt)) %>%\n  unnest(gi_star)\n\nhead(gi_stars_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 16\n# Groups:   fiscal_year [1]\n  ADM1_PCODE province_en     fiscal_year total_cases nb    wt    gi_star cluster\n  <chr>      <chr>                 <dbl>       <dbl> <lis> <lis>   <dbl> <fct>  \n1 TH10       Bangkok                2017       60067 <int> <dbl>   5.47  High   \n2 TH11       Samut Prakan           2017       12452 <int> <dbl>   4.43  High   \n3 TH12       Nonthaburi             2017        7348 <int> <dbl>   3.00  High   \n4 TH13       Pathum Thani           2017        7616 <int> <dbl>   2.45  High   \n5 TH14       Phra Nakhon Si…        2017        6221 <int> <dbl>  -0.504 Low    \n6 TH15       Ang Thong              2017        1614 <int> <dbl>  -1.10  Low    \n# ℹ 8 more variables: e_gi <dbl>, var_gi <dbl>, std_dev <dbl>, p_value <dbl>,\n#   p_sim <dbl>, p_folded_sim <dbl>, skewness <dbl>, kurtosis <dbl>\n```\n\n\n:::\n:::\n\n\n### 9.5 Mann-Kendall Test for Trends\n\nThe next phase of our analysis involves applying the **Mann-Kendall Trend** **Test**. This test helps determine whether a dataset shows a statistically significant **upward or downward trend** over time. Being a non-parametric test, it doesn't require the data to follow a specific distribution and instead **compares the relative magnitudes** of data points rather than the actual values (Gilbert, 1987).\n\nThe Mann-Kendall test produces two main results: Kendall’s Tau `(τ)` and the Kendall Score `(S)`. Kendall’s Tau (τ) is a **correlation measure** that assesses the strength of association between two variables, ranging between 0 and 1. It is calculated using the formula `τ = (C - D) / (C + D)`, where **C** is the count of concordant pairs and **D** is the count of discordant pairs. The hypotheses for Kendall’s Tau are:\n\n-   **Null Hypothesis**: τ = 0 (No correlation exists.)\n\n-   **Alternative Hypothesis**: τ ≠ 0 (A correlation exists.)\n\nAs described by Kendall M.G. (1975), the Kendall Score (S) starts at **zero**, with the assumption of no trend. For each data point that is higher than a previous one, S is incremented, and for each point that is lower, S is decremented. A **high positive** S indicates an **increasing** trend, while a **strongly negative S** suggests a **decreasing** trend. The p-value is used to determine the statistical significance of the trend.\n\nFor this study, the `MannKendall()` function from the **Kendall** package is used to conduct this test. We will apply the Mann-Kendall test to the three key hotspots and three key coldspots identified in our HCSA analysis.\n\n#### 9.5.1 Trend Test of Top 3 Statistically Significant *Hotspots*\n\nPreviously, we identified that Amnat Charoen TH37), Bangkok (TH10) and Buri Ram (TH31) are the top provinces with most significant hotspots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth37_hotspot_data <- gi_stars_year %>%\n                     ungroup() %>%\n                     filter(province_en == \"Amnat Charoen\") %>%\n                     select(province_en, fiscal_year, gi_star)\n\nth10_hotspot_data <- gi_stars_year %>%\n                     ungroup() %>%\n                     filter(province_en == \"Bangkok\") %>%\n                     select(province_en, fiscal_year, gi_star)\n\nth31_hotspot_data <- gi_stars_year %>%\n                     ungroup() %>%\n                     filter(province_en == \"Buri Ram\") %>%\n                     select(province_en, fiscal_year, gi_star)\n```\n:::\n\n\nNext, we can visualise the trend of Gi\\* values for the three hotspot provinces identified above, namely using the `plotly()` function as shown.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_hotspots <- ggplot() +\n  geom_line(data = th37_hotspot_data, mapping = aes(x = fiscal_year, y = gi_star, color = \"Amnat Charoen Province\")) +\n  geom_line(data = th10_hotspot_data, mapping = aes(x = fiscal_year, y = gi_star, color = \"Bangkok Special Admin Area\")) +\n  geom_line(data = th31_hotspot_data, mapping = aes(x = fiscal_year, y = gi_star, color = \"Buri Ram Province\")) +\n  labs(x = \"Fiscal Year\", y = \"Gi* Value\",\n       title = \"Gi* of Three Most Significant Hotspots From 2017 to 2022\",\n       color = \"Province\")\n\nplotly::ggplotly(top_hotspots)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-b052d54201561e8c44a5\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b052d54201561e8c44a5\">{\"x\":{\"data\":[{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[-0.10797892120348813,-0.12897258233814735,0.23461146760176629,-0.39743332175606844,0.70973900826940495,0.072147145783260411],\"text\":[\"fiscal_year: 2017<br />gi_star: -0.10797892<br />colour: Amnat Charoen Province\",\"fiscal_year: 2018<br />gi_star: -0.12897258<br />colour: Amnat Charoen Province\",\"fiscal_year: 2019<br />gi_star:  0.23461147<br />colour: Amnat Charoen Province\",\"fiscal_year: 2020<br />gi_star: -0.39743332<br />colour: Amnat Charoen Province\",\"fiscal_year: 2021<br />gi_star:  0.70973901<br />colour: Amnat Charoen Province\",\"fiscal_year: 2022<br />gi_star:  0.07214715<br />colour: Amnat Charoen Province\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Amnat Charoen Province\",\"legendgroup\":\"Amnat Charoen Province\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[5.4654277661790784,5.4622362384897478,5.0980041258838691,3.8534199882334104,1.7585904834291024,0.61914179052701546],\"text\":[\"fiscal_year: 2017<br />gi_star: 5.4654278<br />colour: Bangkok Special Admin Area\",\"fiscal_year: 2018<br />gi_star: 5.4622362<br />colour: Bangkok Special Admin Area\",\"fiscal_year: 2019<br />gi_star: 5.0980041<br />colour: Bangkok Special Admin Area\",\"fiscal_year: 2020<br />gi_star: 3.8534200<br />colour: Bangkok Special Admin Area\",\"fiscal_year: 2021<br />gi_star: 1.7585905<br />colour: Bangkok Special Admin Area\",\"fiscal_year: 2022<br />gi_star: 0.6191418<br />colour: Bangkok Special Admin Area\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,186,56,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Bangkok Special Admin Area\",\"legendgroup\":\"Bangkok Special Admin Area\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[-0.24680132750220315,0.30449137658872505,0.82607557508669938,-0.14783673645646891,1.3917693557553643,1.6464169779560538],\"text\":[\"fiscal_year: 2017<br />gi_star: -0.2468013<br />colour: Buri Ram Province\",\"fiscal_year: 2018<br />gi_star:  0.3044914<br />colour: Buri Ram Province\",\"fiscal_year: 2019<br />gi_star:  0.8260756<br />colour: Buri Ram Province\",\"fiscal_year: 2020<br />gi_star: -0.1478367<br />colour: Buri Ram Province\",\"fiscal_year: 2021<br />gi_star:  1.3917694<br />colour: Buri Ram Province\",\"fiscal_year: 2022<br />gi_star:  1.6464170<br />colour: Buri Ram Province\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(97,156,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Buri Ram Province\",\"legendgroup\":\"Buri Ram Province\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":31.415525114155255},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Gi* of Three Most Significant Hotspots From 2017 to 2022\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2016.75,2022.25],\"tickmode\":\"array\",\"ticktext\":[\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\"tickvals\":[2017,2018,2019,2020,2021,2022],\"categoryorder\":\"array\",\"categoryarray\":[\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Fiscal Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-0.69057637615282585,5.7585708205758355],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"2\",\"4\"],\"tickvals\":[0,2,4],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"2\",\"4\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Gi* Value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Province\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"3378673743bb\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"337820c877c7\":{\"x\":{},\"y\":{},\"colour\":{}},\"33781688447a\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"3378673743bb\",\"visdat\":{\"3378673743bb\":[\"function (y) \",\"x\"],\"337820c877c7\":[\"function (y) \",\"x\"],\"33781688447a\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n::: {.callout-tip title=\"Observations\"}\nIt is interesting to see that two provinces **(Bangkok and Buri Ram)** share a similar **upward** moving trend from **2017 to 2022** - though the latter experiences some **fluctuations**. The Gi\\* values peaked once in **2019**, followed by a dip in 2020 (presumably due to COVID-19) and peaked once again in **2021**.\n\nOn the other hand, the **Amnat Charoen province** experiences a **downward** moving trend with the biggest drop in Gi\\* values from **2020 to 2021**. This results is particularly surprising since Amnat Charoen started as the **most concentrated hotspot** for drug activities in 2017. By the end of 2022, we see that Bangkok has even surpassed it in Gi\\* values, meaning Amnat Charoen had **improved** **drastically** in its drug control efforts!\n\nIt's worth noting that these provinces were identified as significant hotspots due to the **cumulative count** of drug cases. However, just identifying hotspots can overlook the temporal dynamics and shifts in drug clustering over time. If not for the **Mann-Kendall trend test**, we would have not have realised these provinces have been stable or somewhat better in their control of drug cases, except for Bangkok.\n:::\n\nWe will now calculate the Kendall’s **tau** and Kendall score **S** for each province using `MannKendall()` function from **Kendall** package.\n\n::: panel-tabset\n###### Amnat Charoen Province\n\nAnmat Charoen shows a **weak upward** trend in the data (`tau = 0.2, S > 0`). This is surprising as the graph earlier indicated a **downward** moving trend in the number of drug cases.\n\nRecall that we previously decided the threshold for statistically significant results is Gi\\* \\> 0 instead of Gi\\* \\> 2, since only two hotspots fall under the p-value \\< 0.05 (Bangkok and Buri Ram). Hence, it is unsurprising that the `sl` returned is \\> 0.05, i.e. the test does not find sufficient evidence to claim a **clear upward or downward trend** in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth37_hotspot_data %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n    tau    sl     S     D  varS\n  <dbl> <dbl> <dbl> <dbl> <dbl>\n1 0.200 0.707     3  15.0  28.3\n```\n\n\n:::\n:::\n\n\n###### Bangkok Special Admin Area\n\nThe results shows a **very strong downward** trend in Bangkok (`tau = -0.999, S < 0`), and the p-value confirms that this trend is statistically significant. This suggests a significant decrease in the measured number of drug cases over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth10_hotspot_data %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 -1.00 0.00853   -15  15.0  28.3\n```\n\n\n:::\n:::\n\n\n###### Buri Ram Province\n\nThis province showed a **strong upward trend** (`tau = 0.733, S > 0`), but the p-value is slightly above 0.05, meaning this trend is not statistically significant at the 5% level. However, it is close to being significant, suggesting some evidence of an increasing trend.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth31_hotspot_data %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n    tau     sl     S     D  varS\n  <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 0.733 0.0603    11  15.0  28.3\n```\n\n\n:::\n:::\n\n:::\n\n#### 9.5.2 Trend Test of Top 3 Statistically Significant *Coldspots*\n\nPreviously, we also identified that Chai Nat (TH18), Kamphaeng Phet (TH62) and Nakhon Sawan (TH60) are the top provinces with most significant coldspots.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth18_coldspot_data <- gi_stars_year %>%\n                     ungroup() %>%\n                     filter(province_en == \"Chai Nat\") %>%\n                     select(province_en, fiscal_year, gi_star)\n\nth62_coldspot_data <- gi_stars_year %>%\n                     ungroup() %>%\n                     filter(province_en == \"Kamphaeng Phet\") %>%\n                     select(province_en, fiscal_year, gi_star)\n\nth60_coldspot_data <- gi_stars_year %>%\n                     ungroup() %>%\n                     filter(province_en == \"Nakhon Sawan\") %>%\n                     select(province_en, fiscal_year, gi_star)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_hotspots <- ggplot() +\n  geom_line(data = th18_coldspot_data, mapping = aes(x = fiscal_year, y = gi_star, color = \"Chai Nat Province\")) +\n  geom_line(data = th62_coldspot_data, mapping = aes(x = fiscal_year, y = gi_star, color = \"Kamphaeng Phet Province\")) +\n  geom_line(data = th60_coldspot_data, mapping = aes(x = fiscal_year, y = gi_star, color = \"Nakhon Sawan Province\")) +\n  labs(x = \"Fiscal Year\", y = \"Gi* Value\",\n       title = \"Gi* of Three Most Significant Coldspots From 2017 to 2022\",\n       color = \"Province\")\n\nplotly::ggplotly(top_hotspots)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f692a1f1d6aca414be74\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f692a1f1d6aca414be74\">{\"x\":{\"data\":[{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[-1.4725186717987067,-1.5490988601017857,-1.6470753369414532,-1.8006743181331435,-2.256408601840679,-2.1633500733215079],\"text\":[\"fiscal_year: 2017<br />gi_star: -1.472519<br />colour: Chai Nat Province\",\"fiscal_year: 2018<br />gi_star: -1.549099<br />colour: Chai Nat Province\",\"fiscal_year: 2019<br />gi_star: -1.647075<br />colour: Chai Nat Province\",\"fiscal_year: 2020<br />gi_star: -1.800674<br />colour: Chai Nat Province\",\"fiscal_year: 2021<br />gi_star: -2.256409<br />colour: Chai Nat Province\",\"fiscal_year: 2022<br />gi_star: -2.163350<br />colour: Chai Nat Province\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Chai Nat Province\",\"legendgroup\":\"Chai Nat Province\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[-1.5271745842665101,-1.2679000364638056,-1.2339908083369677,-1.4266018857115279,-2.1283384970956956,-2.4323732629927428],\"text\":[\"fiscal_year: 2017<br />gi_star: -1.527175<br />colour: Kamphaeng Phet Province\",\"fiscal_year: 2018<br />gi_star: -1.267900<br />colour: Kamphaeng Phet Province\",\"fiscal_year: 2019<br />gi_star: -1.233991<br />colour: Kamphaeng Phet Province\",\"fiscal_year: 2020<br />gi_star: -1.426602<br />colour: Kamphaeng Phet Province\",\"fiscal_year: 2021<br />gi_star: -2.128338<br />colour: Kamphaeng Phet Province\",\"fiscal_year: 2022<br />gi_star: -2.432373<br />colour: Kamphaeng Phet Province\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,186,56,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Kamphaeng Phet Province\",\"legendgroup\":\"Kamphaeng Phet Province\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[-1.7561080711307162,-1.5454136480067617,-1.7282769024299458,-1.956828719935505,-2.4293192724009773,-2.6628997215267822],\"text\":[\"fiscal_year: 2017<br />gi_star: -1.756108<br />colour: Nakhon Sawan Province\",\"fiscal_year: 2018<br />gi_star: -1.545414<br />colour: Nakhon Sawan Province\",\"fiscal_year: 2019<br />gi_star: -1.728277<br />colour: Nakhon Sawan Province\",\"fiscal_year: 2020<br />gi_star: -1.956829<br />colour: Nakhon Sawan Province\",\"fiscal_year: 2021<br />gi_star: -2.429319<br />colour: Nakhon Sawan Province\",\"fiscal_year: 2022<br />gi_star: -2.662900<br />colour: Nakhon Sawan Province\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(97,156,255,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Nakhon Sawan Province\",\"legendgroup\":\"Nakhon Sawan Province\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":43.762557077625573,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":48.949771689497723},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Gi* of Three Most Significant Coldspots From 2017 to 2022\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2016.75,2022.25],\"tickmode\":\"array\",\"ticktext\":[\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\"tickvals\":[2017,2018,2019,2020,2021,2022],\"categoryorder\":\"array\",\"categoryarray\":[\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Fiscal Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-2.7343451671862731,-1.1625453626774771],\"tickmode\":\"array\",\"ticktext\":[\"-2.4\",\"-2.0\",\"-1.6\",\"-1.2\"],\"tickvals\":[-2.4000000000000004,-2,-1.6000000000000001,-1.2000000000000002],\"categoryorder\":\"array\",\"categoryarray\":[\"-2.4\",\"-2.0\",\"-1.6\",\"-1.2\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Gi* Value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Province\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"3378b6c4aa\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"337868cf44b9\":{\"x\":{},\"y\":{},\"colour\":{}},\"3378702267e1\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"3378b6c4aa\",\"visdat\":{\"3378b6c4aa\":[\"function (y) \",\"x\"],\"337868cf44b9\":[\"function (y) \",\"x\"],\"3378702267e1\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n::: {.callout-tip title=\"Observations\"}\nAcross 2017 to 2022, we see a **very similar downward trend** in Gi\\* values for the three provinces we identified to be the most significant coldspots for drug cases. In fact, from 2017 to 2018, Kamphaeng Phet and Nakhon Sawan showed **weakening** **of clusters of low drug cases** as observed from the rise in Gi\\* values. This is followed by a dip in Gi\\* values over time where these provinces had evolved into **stronger** **coldspots** with a much lower concentration of drug cases compared to other provinces.\n\nThe Chai Nat province shares a similar negative trend in Gi\\* values, suggesting stronger clustering of low drug cases. However, we see a slight increase in Gi\\* values from 2021.\n:::\n\nSimilarly, we can calculate the Kendall’s **tau** and Kendall score **S** for each province\n\n::: panel-tabset\n###### Chai Nat Province\n\nThere is a **very strong downward** trend in the clustering of low drug cases as observed from `tau = -0.866` and `S > 0`. These results are also statistically significant as seen from `sl < 0.05`, meaning that there was sufficient evidence in the test to prove this negative trend.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth18_coldspot_data %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n     tau     sl     S     D  varS\n   <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 -0.867 0.0242   -13  15.0  28.3\n```\n\n\n:::\n:::\n\n\n###### Kamphaeng Phet Province\n\nThe results shows a **somewhat weak downward** trend in Kamphaeng Phet province as seen from `tau = -0.466`, meaning it is closer to 0 than -1. The `S < 0` results just confirms the negative trends observed. However, since `sl` returned is **greater** than 0.05, the trends observed here could be due to **random** chance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth62_coldspot_data %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n     tau    sl     S     D  varS\n   <dbl> <dbl> <dbl> <dbl> <dbl>\n1 -0.467 0.260    -7  15.0  28.3\n```\n\n\n:::\n:::\n\n\n###### Nakhon Sawan Province\n\nThis time, we see a **relatively strong negative** associations where the `tau` value returned is **-0.733** and `S < 0`. Additionally, a `sl` of 0.06 is returned, that is slightly higher than the threshold for statistical significance. This means that the observations from Nakhon Sawan province could also be due to **random chance.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nth60_coldspot_data %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n     tau     sl     S     D  varS\n   <dbl>  <dbl> <dbl> <dbl> <dbl>\n1 -0.733 0.0603   -11  15.0  28.3\n```\n\n\n:::\n:::\n\n:::\n\n### 9.6 Performing Emerging Hot Spot Analysis\n\nLastly, we will perform EHSA analysis by using [`emerging_hotspot_analysis()`](https://sfdep.josiahparry.com/reference/emerging_hotspot_analysis.html) of the sfdep package. We will utilise the spacetime object `drug_cases_spt`, and the name of the variable of interest `total_cases` for the.var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Finally, `nsim` map numbers of simulation to be performed.\n\nThe method classifies locations into different categories, such as:\n\n| Pattern Type              | Definition                                                                                                                                                                                                                                                                                                                 |\n|------------------|------------------------------------------------------|\n| **No Pattern Detected**   | Does not fall into any of the hot or cold spot patterns defined below.                                                                                                                                                                                                                                                     |\n| **Sporadic Hot Spo**t     | A statistically significant hot spot for the final time-step interval with a history of also being an on-again and off-again hot spot. Less than 90 percent of the time-step intervals have been statistically significant hot spots and none of the time-step intervals have been statistically cold spots.               |\n| **Sporadic Cold Spot**    | A statistically significant cold spot for the final time-step interval with a history of also being an on-again and off-again cold spot. Less than 90 percent of the time-step intervals have been statistically significant cold spots and none of the time-step intervals have been statistically significant hot spots. |\n| **Persistent Cold Spot**  | A location that has been a statistically significant cold spot for 90 percent of the time-step intervals with no discernible trend in the intensity of clustering of counts over time.                                                                                                                                     |\n| **New Cold Spot**         | A location that is a statistically significant cold spot for the final time step and has never been a statistically significant cold spot before.                                                                                                                                                                          |\n| **Consecutive Cold Spot** | A location with a single uninterrupted run of at least two statistically significant cold spot bins in the final time-step intervals. The location has never been a statistically significant cold spot prior to the final cold spot run and less than 90 percent of all bins are statistically significant cold spots.    |\n| **Consecutive Hot Spot**  | A location with a single uninterrupted run of at least two statistically significant hot spot bins in the final time-step intervals. The location has never been a statistically significant hot spot prior to the final hot spot run and less than 90 percent of all bins are statistically significant hot spots.        |\n\nThis classification helps in identifying regions that require immediate attention, those where trends are improving or deteriorating, and areas where consistent patterns persist.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = drug_cases_spt,\n  .var = \"total_cases\",\n  k = 1,\n  nsim = 99\n)\n\nthailand_ehsa <- drug_cases_province_year %>%\n  left_join(ehsa,\n            by = join_by(ADM1_PCODE == location)) %>%\n  mutate(label = paste(ADM1_PCODE,province_en))\n```\n:::\n\n\nWe are now ready to plot the bar charts of each category type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gridExtra)\nthailand_ehsa_sig <- thailand_ehsa  %>%\n  filter(p_value < 0.05)\n\nplot1 <- ggplot(data = ehsa,\n                aes(y = classification, fill = classification)) +\n  geom_bar(show.legend = FALSE) +\n  labs(title = \"Overall EHSA Classification\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 12, face = \"bold\"))  # Reducing size and bolding the title\n\nplot2 <- ggplot(data = thailand_ehsa_sig,\n                aes(y = classification, fill = classification)) +\n  geom_bar(show.legend = FALSE) +\n  labs(title = \"Statistically Significant EHSA Classification\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 12, face = \"bold\"))  # Reducing size and bolding the title\n\ngrid.arrange(plot1, plot2, ncol = 2)\n```\n:::\n\n\n![](images/clipboard-1516116801.png)\n\n::: {.callout-tip title=\"Observations\"}\nWhen analysing the overall classification of EHSA concerning drug cases, it appears that the majority of observed patterns **do not distinctly categorise** areas as hotspots (regions with a high concentration of drug cases) or cold spots (regions with a low concentration). This may suggest that many regions do not experience pronounced issues related to drug activities, or it could indicate potential limitations in the data or the methods used for analysis.\n\nAdditionally, we can see that **sporadic coldspots** and **consecutive coldspots** constitute the highest EHSA class for both overall and statistically significant respectively. These two results are rather contrasting since one shows fluctuations in low drug case offenses while the other suggests consistently low drug cases observed.\n\nOn the other hand, among the hotspot classifications, **sporadic hotspots** and **consecutive hotspots** account for the highest counts in both the overall and statistically significant datasets, respectively. This indicates that certain regions experience **occasional peaks** in drug cases, while others maintain a more stable pattern of **elevated drug activity**. These results underscore the complexity of drug offenses in the studied areas, revealing both **variability** and **consistency** in patterns of drug-related incidents.\n:::\n\nWe can also plot these ESHA classes onto our map of Thailand for visualisation of province-level dynamics of drug cases. This plot revealed that there is a **consecutive hotspot** found in a Southern province **(red)** which could be due to underlying socio-economic factors causing such high intensity of drug cluster. Interestingly, there is also a **conseutive coldspot (purple)** found adjacent to a **new coldspot (green)** province. The proximity of these coldspots implies that **effective interventions** in one area could have a positive impact on adjacent regions, potentially leading to a broader reduction in drug-related issues.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\npalette <- c(\n  consecutive_coldspot = \"#C9DAF8\",     # Light Purple\n  consecutive_hotspot = \"#D74B32\",    # Orange-Red\n  new_coldspot = \"#D9EAD3\",           # Light Green\n  no_patterns_detected = \"#FFFFFF\",    # White\n  persistent_coldspot = \"#4F81BD\",    # Medium Blue\n  sporadic_coldspot = \"#A6C8E0\"      # Light Blue\n)\n\n# Plot with your specifications\ntm_shape(thailand_ehsa) +\n  tm_polygons() +\n  tm_borders(col = \"black\", alpha = 0.6) +\ntm_shape(thailand_ehsa_sig) +\n  tm_fill(\"classification\", \n          palette = palette,\n          title = \"ESHA Classification\",\n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_borders(col = \"black\", alpha = 0.5) +\n  tm_layout(main.title = \"Emerging Statistically Significant Hotspots &\\n Coldspots of Drug Cases in Thailand\",\n            main.title.position = \"center\",\n            main.title.size = 0.7,  # Increased size for better visibility\n            main.title.fontface = \"bold\",\n            legend.title.size = 0.5,  # Increased for better visibility\n            legend.text.size = 0.4,\n            legend.hist.size = 0.4,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\",\n            frame = TRUE) +\n  tm_compass(type = \"8star\", text.size = 0.5, size = 2, position = c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position = c(\"LEFT\", \"BOTTOM\"), text.size = 0.5) +\n  tm_grid(labels.size = 0.4, alpha = 0.1)\n```\n:::\n\n\n![](images/clipboard-3005476208.png)\n\n## 10. Conclusion and Reflections\n\nAs I come to the end of this study, I have successfully uncovered deeper insights into Thailand's drug abuse via spatial and spatio-temporal autocorrelation for the period of 2017 to 2022, namely using global Moran's I, global Geary's C, local Moran's I, LISA classifications, local Getis-Ord Gi\\* and emerging hot spot analysis.\n\nThis study reveals a compelling need for greater intervention for drug control and law enforcement since a majority of **high drug case clusters** continue remaining high across the years. We also observed a tendency for **low-low and low-high** clusters to evolve into **high-high** drug clusters, meaning that the presence of drug rings / networks in neighbour provinces increases the potential of such drug cases **spilling over** into provinces that were once less affected by drug offenses. This could be due to strong transport networks and the movement of goods and people through these transport routes.\n\nInterestingly, there were some provinces that are geographically close but exhibited starkly different patterns in drug case distribution, e.g. **hotspots** and **coldspots** found adjacent to each other. Such disparities can be due to various factors, e.g. differences in local governance, law enforcement and socio-economic conditions. Though these are beyond the take-home exercise, I believe that including factors **(e.g. GDPPC)** could act as potentially interesting future analyses.\n\nThrough this study, it is evident that the analysis of drug cases reveals a complex landscape where **sporadic cold spots** and **consecutive cold spots** highlight fluctuations and consistency in low drug offenses, while **sporadic and consecutive hotspots** indicate varying intensities of drug-related activity across different regions.\n\nHowever, there is an interconnectedness of drug dynamics across different provinces, where the **presence of coldspot** regions can influence **low drug cases in its surroundings** too. Hence, this highlights the importance of coordinated strategies in addressing drug challenges in a national context and the need for greater targeted interventions with a deeper understanding of underlying factors influencing these patterns.\n\nWith that said, I would like to extend my gratitude to **Prof. Kam Tin Seong** for his valuable guidance and mentorship! :) This exercise requires some intensive computational load, depending on the level of granularity of this analysis. Therefore, it is most recommended to begin the take-home exercise early to make room for processing time and debugging. This marks the end of my study and I thank you for taking the time to read till here! 🎉🎉🎉\n\n## 11. References\n\n1.  CRAN. (2024, September 5). Classes and Methods for Spatio-Temporal Data.\n2.  Crawley, M. J. (2007). The R Book. Wiley.\n3.  Handbook of Spatial Analysis. (2018). Insee. <https://www.insee.fr/en/information/3635545> \n4.  Kanato, M., Sarasiri, R., & Leyatikul, P. (2022). ASEAN Drug Monitoring Report.\n5.  Nguyen, K.-B., Choi, J., & Yang, J.-S. (2022). Checkerboard Dropout: A Structured Dropout With Checkerboard Pattern for Convolutional Neural Networks.\n6.  Parry, J., & Locke, D. H. (n.d.). The Basics of sfdep. Retrieved September 26, 2024, from <https://sfdep.josiahparry.com/articles/basics-of-sfdep> \n7.  Parry, J., & Locke, D. H. (n.d.). Spacetime and spacetime cubes • sfdep. sfdep. Retrieved October 6, 2024, from <https://sfdep.josiahparry.com/articles/spacetime-s3.html> \n8.  Peay, A. (n.d.). Spatial Regression Analysis Advanced Data Analytics. chrismgentry.github.io. <https://chrismgentry.github.io/Spatial-Regression/> \n9.  vsp.pnnl.gov. (n.d.). Mann-Kendall Test For Monotonic Trend. Design Trend Mann-Kendall. Retrieved October 6, 2024, from <https://vsp.pnnl.gov/help/vsample/design_trend_mann_kendall.htm> \n",
    "supporting": [
      "Take-home_Ex2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}